{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "type": {
      "type": "array",
      "readOnly": true,
      "default": [
        "ConformitySchemeVocabulary"
      ],
      "items": {
        "type": "string"
      },
      "allOf": [
        {
          "contains": {
            "const": "ConformitySchemeVocabulary",
            "minContains": 1
          }
        }
      ]
    },
    "@context": {
      "type": "array",
      "items": {},
      "description": "The context for the Sustainability Vocabulary."
    },
    "id": {
      "example": "https://sample-scheme.org/ESGStandard/v4.0",
      "type": "string",
      "format": "uri",
      "description": "The identifier of this scheme as a URI. Typically of the form ownerDomain.schemeName."
    },
    "scheme": {
      "$ref": "#/$defs/ConformityScheme",
      "description": "The conformity scheme on which this vocabulary is built."
    },
    "conformityCriterion": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Criterion"
      },
      "description": "A list of criterion defined by this scheme."
    },
    "regulatoryAlignment": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/Regulation"
      },
      "description": "Regulations to which this conformity scheme is aligned. "
    },
    "industryScope": {
      "$ref": "#/$defs/Classification",
      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility."
    },
    "geographicScope": {
      "$ref": "#/$defs/Classification",
      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility."
    },
    "performanceLevelCode": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/LevelCode"
      },
      "description": "An optional list of performance levels (eg C, B, A, AA) defined by the scheme and used to assign criterion to the relevant performance level."
    },
    "tagCode": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/TagCode"
      },
      "description": "A codelist of tags defined by the scheme and used to tag criterion for filtering and sorting."
    }
  },
  "description": "A conformity scheme as a structured hierarchy of conformity critera.# Note: \"name\", \"description\", \"id\" and \"type\" need to be defined in the context because# we import the UNTP-core model `Criterion` which is also used in credentials# where the VC context has been included, and the VC context defines both the # name and description terms globally (with a few others).# See https://github.com/w3c/vc-data-model/blob/949c8e1749a18dfd1e5d7556f9d5cb7801e0932f/contexts/credentials/v2#L5-L20",
  "required": [
    "id",
    "conformityCriterion"
  ],
  "$defs": {
    "ConformityScheme": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "ConformityScheme"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "ConformityScheme",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://sample-scheme.org/ESGStandard/v4.0",
          "type": "string",
          "format": "uri",
          "description": "The identifier of this scheme as a URI. Typically of the form ownerDomain.schemeName."
        },
        "name": {
          "example": "Sample ESG Standard",
          "type": "string",
          "description": "The name of this conformity scheme"
        },
        "description": {
          "example": "The Sample ESG Standard provides a framework for assessing and enhancing environmental, social, and governance performance across supply chains, ensuring compliance with best practices through validated assessments.",
          "type": "string",
          "description": "The description of this conformity scheme"
        },
        "version": {
          "example": "1.0.0",
          "type": "string",
          "description": "Version of this scheme folling SemVer best practive (major.minor.patch). "
        },
        "validFrom": {
          "example": "2025-06-10",
          "type": "string",
          "format": "date",
          "description": "The data from which this scheme version is valid."
        },
        "owner": {
          "type": "object",
          "properties": {
            "id": {
              "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
              "type": "string",
              "format": "uri",
              "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
            },
            "name": {
              "example": "Sample Company Pty Ltd.",
              "type": "string",
              "description": "The registered name of the party within the identifier scheme."
            },
            "registeredId": {
              "example": 90664869327,
              "type": "string",
              "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
            }
          },
          "required": [
            "id",
            "name"
          ],
          "description": "The party that is the owner / maintainer of this conformity scheme."
        },
        "trustmark": {
          "$ref": "#/$defs/BinaryFile",
          "description": "The trust mark or seal used by this conformity scheme."
        }
      },
      "description": "A formal governance scheme under which this attestation is issued (eg ACRS structural steel certification)",
      "required": [
        "id",
        "name",
        "description",
        "version",
        "validFrom",
        "owner"
      ]
    },
    "BinaryFile": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "BinaryFile"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "BinaryFile",
                "minContains": 1
              }
            }
          ]
        },
        "fileName": {
          "example": "GHG protocol trust mark",
          "type": "string",
          "description": "A name for referenced binary file"
        },
        "fileType": {
          "type": "string",
          "x-external-enumeration": "https://mimetype.io/",
          "description": "The type of file, represented as a MIME type.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://mimetype.io/\n    "
        },
        "file": {
          "example": "iVBORw0KGgoAAAANSUhEUgAAADkAAAA2CAYAAAB9TjFQAAAABGdBTUEAAi/9H3pWy6vI9uFdAAAAAElFTkSuQmCC",
          "type": "string",
          "format": "byte",
          "description": "The binary file data encoded as Base64 string."
        }
      },
      "description": "A binary file reference including name and file type."
    },
    "Criterion": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "Criterion"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Criterion",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://www.globalbattery.org/media/publications/gba-rulebook-v2.0-master.pdf#BatteryAssembly",
          "type": "string",
          "format": "uri",
          "description": "A unique identifier for the criterion within the scheme, standard  or regulation. For example CO2 emissions calculations for liquid fuel combustion."
        },
        "name": {
          "example": "GBA Battery rule book v2.0 battery assembly guidelines.",
          "type": "string",
          "description": "A name that describes this criteria."
        },
        "description": {
          "example": "Battery is designed for easy disassembly and recycling at end-of-life.",
          "type": "string",
          "description": "A full text description of the criterion that clearly specifies how compliance is achieved and measured. "
        },
        "conformityTopic": {
          "type": "string",
          "enum": [
            "environment.energy",
            "environment.emissions",
            "environment.water",
            "environment.waste",
            "environment.deforestation",
            "environment.biodiversity",
            "circularity.content",
            "circularity.design",
            "social.labour",
            "social.rights",
            "social.community",
            "social.safety",
            "governance.ethics",
            "governance.compliance",
            "governance.transparency"
          ],
          "example": "environment.energy",
          "description": "A gloabl UN/CEFACT standard sustainability toipic code. "
        },
        "status": {
          "type": "string",
          "enum": [
            "proposed",
            "active",
            "deprecated"
          ],
          "example": "proposed",
          "description": "The lifecycle status of this criterion. "
        },
        "subCriterion": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Criterion"
          },
          "description": "List of criterion that are subordinate to this criterion in the hierarchy."
        },
        "thresholdValue": {
          "$ref": "#/$defs/Metric",
          "description": "A threshold value that defines the minimum compliance level. "
        },
        "performanceLevel": {
          "example": "\"Category 3 recyclable with 73% recyclability\"",
          "type": "string",
          "description": "A performance category code to group criterion in a given hierarchyLevel according to pareformance"
        },
        "category": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Classification"
          },
          "description": "A set of classification codes that may be used to categorize the applicability of this criteria - for example industry sector, jurisdiction or commodity type - based on a formal vocabulary."
        },
        "tag": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of tags that can be used by the scheme owner to be able to filter or group criterion in a large vocabulary for specific use cases."
        }
      },
      "description": "A specific rule or criterion within a standard or regulation. eg a carbon intensity calculation rule within an emissions standard.",
      "required": [
        "id",
        "name",
        "description",
        "conformityTopic",
        "status"
      ]
    },
    "Metric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "Metric"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Metric",
                "minContains": 1
              }
            }
          ]
        },
        "metricName": {
          "example": "GHG emissions intensity",
          "type": "string",
          "description": "A human readable name for this metric (for example \"Tensile strength\")"
        },
        "metricValue": {
          "$ref": "#/$defs/Measure",
          "description": "A numeric value and unit of measure for this metric. Could be a measured value or a specified threshold. Eg {\"value\":400, \"unit\":\"MPA\"} as tensile strength of structural steel"
        },
        "score": {
          "example": "BB",
          "type": "string",
          "description": "A score or rank associated with this measured metric."
        },
        "accuracy": {
          "example": 0.05,
          "type": "number",
          "description": "A percentage represented as a numeric between 0 and 1 indicating the rage of accuracy of the claimed value (eg 0.05 means that the actual value is within 5% of the claimed value.)"
        }
      },
      "description": "A specific measure of performance against the criteria that governs the claim.  Expressed as an array of metric (ie unit of measure) / value (ie the actual numeric value) pairs.  ",
      "required": [
        "metricName",
        "metricValue"
      ]
    },
    "Measure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "Measure"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Measure",
                "minContains": 1
              }
            }
          ]
        },
        "value": {
          "example": 10,
          "type": "number",
          "description": "The numeric value of the measure"
        },
        "unit": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/UnitMeasureCode#",
          "description": "Unit of measure drawn from the UNECE Rec20 measure code list.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/UnitMeasureCode#\n    "
        }
      },
      "description": "The measure class defines a numeric measured value (eg 10) and a coded unit of measure (eg KG).",
      "required": [
        "value",
        "unit"
      ]
    },
    "Classification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "Classification"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Classification",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/46410",
          "type": "string",
          "format": "uri",
          "description": "The globally unique URI representing the specific classifier value"
        },
        "code": {
          "example": 46410,
          "type": "string",
          "description": "classification code within the scheme"
        },
        "name": {
          "example": "Primary cells and primary batteries",
          "type": "string",
          "description": "Name of the classification represented by the code"
        },
        "schemeID": {
          "example": "https://unstats.un.org/unsd/classifications/Econ/cpc/",
          "type": "string",
          "format": "uri",
          "description": "Classification scheme ID"
        },
        "schemeName": {
          "example": "UN Central Product Classification (CPC)",
          "type": "string",
          "description": "The name of the classification scheme"
        }
      },
      "description": "A classification scheme and code / name representing a category value for a product, entity, or facility.",
      "required": [
        "id",
        "name"
      ]
    },
    "Regulation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "Regulation"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "Regulation",
                "minContains": 1
              }
            }
          ]
        },
        "id": {
          "example": "https://www.legislation.gov.au/F2008L02309/latest/versions",
          "type": "string",
          "format": "uri",
          "description": "The globally unique identifier of this regulation. "
        },
        "name": {
          "example": "NNational Greenhouse and Energy Reporting (Measurement) Determination",
          "type": "string",
          "description": "The name of the regulation or act."
        },
        "jurisdictionCountry": {
          "type": "string",
          "x-external-enumeration": "https://vocabulary.uncefact.org/CountryId#",
          "description": "The legal jurisdiction (country) under which the regulation is issued.\n\n    This is an enumerated value, but the list of valid values are too big, or change too often to include here. You can access the list of allowable values at this URL:  https://vocabulary.uncefact.org/CountryId#\n    "
        },
        "administeredBy": {
          "type": "object",
          "properties": {
            "id": {
              "example": "https://abr.business.gov.au/ABN/View?abn=90664869327",
              "type": "string",
              "format": "uri",
              "description": "The globally unique ID of the party as a URI, ideally as a resolvable ID. "
            },
            "name": {
              "example": "Sample Company Pty Ltd.",
              "type": "string",
              "description": "The registered name of the party within the identifier scheme."
            },
            "registeredId": {
              "example": 90664869327,
              "type": "string",
              "description": "The registration number (alphanumeric) of the Party within the register. Unique within the register."
            }
          },
          "required": [
            "id",
            "name"
          ],
          "description": "the issuing body of the regulation. For example Australian Government Department of Climate Change, Energy, the Environment and Water"
        },
        "effectiveDate": {
          "example": "2024-03-20",
          "type": "string",
          "format": "date",
          "description": "the date at which the regulation came into effect."
        }
      },
      "description": "A regulation (eg EU deforestation regulation) that defines the criteria for assessment.",
      "required": [
        "administeredBy"
      ]
    },
    "LevelCode": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "LevelCode"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "LevelCode",
                "minContains": 1
              }
            }
          ]
        },
        "name": {
          "example": "Critical",
          "type": "string",
          "description": "The name of the performance level (eg \"B\")"
        },
        "rank": {
          "example": 1,
          "type": "integer",
          "description": "The rank of the conformance level where a higher number indicates a higher performance. "
        },
        "description": {
          "example": "Indicates a severe non-conformance requiring immediate action and follow-up assessment.",
          "type": "string",
          "description": "A description of this conformity performance level within the scheme."
        }
      },
      "description": "A list of performance level codes that may be assigned to criterion. Conformity at a higher level requires conformity agaisnt all criteria at lower levels.",
      "required": [
        "name",
        "rank"
      ]
    },
    "TagCode": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "array",
          "readOnly": true,
          "default": [
            "TagCode"
          ],
          "items": {
            "type": "string"
          },
          "allOf": [
            {
              "contains": {
                "const": "TagCode",
                "minContains": 1
              }
            }
          ]
        },
        "name": {
          "example": "Manufacturing",
          "type": "string",
          "description": "Tag name used to classify criterion"
        },
        "description": {
          "example": "Criteria applicable to manufacturing industries.",
          "type": "string",
          "description": "A full text description of the criterion that clearly specifies how compliance is achieved and measured. "
        }
      },
      "description": "A code list of target groups () that are the object of confomance for this scheme.",
      "required": [
        "name",
        "description"
      ]
    }
  }
}